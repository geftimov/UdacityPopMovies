import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

class BuildConfig {

    static final int versionMajor = 1
    static final int versionMinor = 0
    static final int versionFix = 0

    String buildAuthor
    String buildTimestamp
    String gitAuthor
    String gitSha
    String gitComment
    String gitBranchName
    Properties envProperties;
    Properties keystoreProperties;
}

ext {
    buildConfig = new BuildConfig()
    buildConfig.buildAuthor = "git config --get user.name".execute().text.trim()
    buildConfig.gitAuthor = "git log --format=%an -n 1 HEAD".execute().text.trim()
    buildConfig.gitSha = "git rev-parse --short HEAD".execute().text.trim()
    buildConfig.gitComment = "git log --format=%B -n 1 HEAD".execute().text.trim().replaceAll("[\r\n\t\"]", "")
    buildConfig.gitBranchName = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
    buildConfig.buildTimestamp = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss.SSSZ")
            .format(Calendar.getInstance().getTime())

    buildConfig.envProperties = new Properties()
    buildConfig.envProperties.load(new FileInputStream(rootDir.absolutePath + "/config/env-details.properties"))

    buildConfig.keystoreProperties = new Properties()
    buildConfig.keystoreProperties.load(new FileInputStream(rootDir.absolutePath + "/config/key-details.properties"))

}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    signingConfigs {
        release {
            storeFile file("${rootDir.absolutePath}/${buildConfig.keystoreProperties.storeFile}")
            storePassword buildConfig.keystoreProperties.storePassword
            keyAlias buildConfig.keystoreProperties.keyAlias
            keyPassword buildConfig.keystoreProperties.keyPassword
        }
    }

    defaultConfig {
        applicationId "com.eftimoff.udacitypopmovies"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode BuildConfig.versionMajor * 1000000 + BuildConfig.versionMinor * 10000 + BuildConfig.versionFix * 100
        versionName "${BuildConfig.versionMajor}.${BuildConfig.versionMinor}.${BuildConfig.versionFix}"

        buildConfigField "String", "BUILD_AUTHOR", "\"$buildConfig.buildAuthor\""
        buildConfigField "String", "BUILD_TIMESTAMP", "\"$buildConfig.buildTimestamp\""
        buildConfigField "String", "GIT_AUTHOR", "\"$buildConfig.gitAuthor\""
        buildConfigField "String", "GIT_SHA", "\"$buildConfig.gitSha\""
        buildConfigField "String", "GIT_COMMENT", "\"$buildConfig.gitComment\""
        buildConfigField "String", "GIT_BRANCH_NAME", "\"$buildConfig.gitBranchName\""
        buildConfigField "String", "ENDPOINT", "\"$buildConfig.envProperties.endpoint\""
        buildConfigField "String", "API_KEY", "\"$buildConfig.envProperties.api_key\""

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //Android
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:recyclerview-v7:23.3.0'
    compile 'com.android.support:palette-v7:23.3.0'
    //Injection
    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'javax.annotation:javax.annotation-api:1.2'
    //View injection
    compile 'com.jakewharton:butterknife:8.0.0-SNAPSHOT'
    apt 'com.jakewharton:butterknife-compiler:8.0.0-SNAPSHOT'
    //Network
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.7.4'
    compile 'com.google.code.gson:gson:2.4'
    //Images
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.florent37:glidepalette:1.0.6'
    //Testing
    testCompile 'junit:junit:4.12'
}
